// src/admin/funciones/notificaciones.js
import { obtenerNotificaciones, marcarNotificacionLeida } from "../../../api/supabaseFunctions.js";
import { supabase } from "../../../api/supabaseAdmin.js";
import { initNotificacionesUI, renderNotificacionesUI } from "../ui/notificaciones/uiNotificaciones.js";

const contadorNotificaciones = document.getElementById("contadorNotificaciones");

/**
 * 游늷 Cargar y mostrar notificaciones
 * - Obtiene las notificaciones desde Supabase
 * - Llama a la funci칩n de renderizado UI
 * - Agrega eventos a botones "marcar como le칤da"
 */
export async function cargarNotificaciones() {
  const notificaciones = await obtenerNotificaciones();

  // Renderizar UI con clases seg칰n estado le칤da/no le칤da
  renderNotificacionesUI(notificaciones, contadorNotificaciones);

  // 游댳 Eventos para marcar notificaciones como le칤das
  document.querySelectorAll(".marcar-leida").forEach(btn => {
    btn.addEventListener("click", async (e) => {
      const id = e.target.dataset.id;
      await marcarNotificacionLeida(id);

      // 游댃 Recargar notificaciones para actualizar contador y estado
      await cargarNotificaciones();
    });
  });
}

/**
 * 游늷 Inicializar UI
 * - Dropdown de notificaciones
 * - Eventos de click para abrir/cerrar
 */
initNotificacionesUI();

/**
 * 游늷 Escuchar notificaciones en tiempo real
 * - Cada vez que se inserta una nueva notificaci칩n en Supabase
 * - Se recargan autom치ticamente las notificaciones
 */
export function escucharNotificacionesTiempoReal() {
  supabase
    .channel("notificaciones-ch")
    .on(
      "postgres_changes",
      { event: "INSERT", schema: "public", table: "notificaciones" },
      async payload => {
        console.log("游댒 Nueva notificaci칩n recibida:", payload.new);
        await cargarNotificaciones();
      }
    )
    .subscribe();
}